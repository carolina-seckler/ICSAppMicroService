// <auto-generated />
using System;
using ICSApp.IncidentService.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ICSApp.IncidentService.Infra.Migrations
{
    [DbContext(typeof(IncidentDbContext))]
    [Migration("20200920152138_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ICSApp.IncidentService.Domain.Entities.Function", b =>
                {
                    b.Property<int>("IdFunction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdFunction");

                    b.ToTable("Function");
                });

            modelBuilder.Entity("ICSApp.IncidentService.Domain.Entities.Incident", b =>
                {
                    b.Property<int>("IdIncident")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraInsercao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataHoraUltimaAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("IncidentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioInsercao")
                        .HasColumnType("text");

                    b.Property<string>("UsuarioUltimaAtualizacao")
                        .HasColumnType("text");

                    b.HasKey("IdIncident");

                    b.ToTable("Incident");
                });

            modelBuilder.Entity("ICSApp.IncidentService.Domain.Entities.Member", b =>
                {
                    b.Property<int>("IdMember")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHoraInsercao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataHoraUltimaAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<int>("IdFunction")
                        .HasColumnType("int");

                    b.Property<int>("IdIncident")
                        .HasColumnType("int");

                    b.Property<int>("IdSection")
                        .HasColumnType("int");

                    b.Property<byte[]>("IdUser")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UsuarioInsercao")
                        .HasColumnType("text");

                    b.Property<string>("UsuarioUltimaAtualizacao")
                        .HasColumnType("text");

                    b.HasKey("IdMember");

                    b.HasIndex("IdFunction");

                    b.HasIndex("IdIncident");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("ICSApp.IncidentService.Domain.Entities.Member", b =>
                {
                    b.HasOne("ICSApp.IncidentService.Domain.Entities.Function", "Function")
                        .WithMany("Members")
                        .HasForeignKey("IdFunction")
                        .IsRequired();

                    b.HasOne("ICSApp.IncidentService.Domain.Entities.Incident", "Incident")
                        .WithMany("Members")
                        .HasForeignKey("IdIncident")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
